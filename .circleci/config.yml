version: 2
jobs:
  test:
    working_directory: /go/src/github.com/blinkhealth/go-config-yourself
    environment:
      GO111MODULE: "on"
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-config-yourself-0-deps-{{ checksum "go.sum" }}
      - run:
          name: install dependencies
          command: |
            mkdir -p /tmp/bc
            mkdir -p /tmp/bc/coverage
            mkdir -p /tmp/bc/reports
            sudo apt-get install -y libgpgme-dev

            mkdir -p /go/pkg/mod/cache
            go mod download
            make test-deps
            if [[ ! -d /tmp/bc/bats ]]; then
              git clone https://github.com/bats-core/bats-core.git /tmp/bc/bats
              cd /tmp/bc/bats
              ./install.sh /tmp/bc
            fi
      - save_cache:
          key: go-config-yourself-0-deps-{{ checksum "go.sum" }}
          paths:
            - /tmp/bc
            - /go/pkg/mod
      - run:
          name: lint
          command: make lint
      - run:
          name: run unit tests
          command: REPORTS="/tmp/bc" make coverage
      - run:
          name: run CLI tests
          command: PATH="$PATH:/tmp/bc/bin" make integration-test
      - store_artifacts:
          path: /tmp/bc/coverage
          destination: coverage
      - store_test_results:
          path: /tmp/bc/reports
          destination: reports

  release:
    working_directory: ~/go/src/github.com/blinkhealth/go-config-yourself
    machine: # docker with volume mounts needs a machine executor
      docker_layer_caching: true
    environment:
      GO111MODULE: "on"
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y golang-go awscli curl gdebi debhelper devscripts
            sudo mkdir -p /go
            sudo chown -R $USER:$USER /go
            curl -LO https://github.com/jgm/pandoc/releases/download/2.7.3/pandoc-2.7.3-1-amd64.deb
            sudo gdebi --non-interactive ./pandoc-2.7.3-1-amd64.deb
      - restore_cache:
          keys:
            - go-config-yourself-0-deps-{{ checksum "go.sum" }}
      - run:
          name: Create a release
          command: |
            mv /go/pkg ~/go/
            export GOPATH="${HOME}/go"
            export PATH="$HOME/go/bin:$PATH"
            make build-local
            # debian packages can optionally get gpg signed
            ./dist/local/gcy get bin/deploy/config.yml gpg.key > key.asc
            gpg --pinentry-mode loopback \
              --passphrase-file <(./dist/local/gcy get bin/deploy/config.yml gpg.password) \
              --import key.asc
            make release
      - run:
          name: Update git pages
          command: |
            if [[ $CIRCLE_TAG == "" ]]; then
              echo "Skipping docs for non-stable release"
              exit 0
            fi
            mv dist/docs/html ../docs
            git checkout gh-pages
            rm -rf .
            mv ../docs/* .
            git add .
            git commit -m "Automated documentation generation for ${CIRCLE_TAG}"
            git push --force

workflows:
  version: 2
  feature:
    jobs:
      - test:
          filters:
            branches: { ignore: [master] }
  release:
    jobs:
      - test:
          filters:
            branches: { only: [master] }
            tags: { only: /^v\d+\.\d+\.\d+$/ }
      - release:
          requires:
            - test
          filters:
            branches: { only: [master] }
            tags: { only: /^v\d+\.\d+\.\d+$/ }
