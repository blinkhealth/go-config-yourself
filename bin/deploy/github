#!/usr/bin/env bash
set -o nounset

VERSION=$(cat dist/VERSION)
gh_base="https://api.github.com/repos/blinkhealth/go-config-yourself"

if ! curl --fail --silent -H "Authorization: Bearer $GITHUB_TOKEN" "$gh_base/releases/tags/$VERSION" >dist/github-release; then
  # if a release for this version doesn't exist, we might create it for
  # merges to the mainline branch vM.m.p-gitSHA1
  # exclude locally built versions with a date suffix
  if [[ $VERSION != *-* ]] || [[ $VERSION == *-*Z ]]; then
    >&2 echo "Refusing to publish a release to github for version $VERSION"
    exit 2
  fi

  >&2 echo "github release for version $VERSION not found, creating"
  parentVersion=$(git describe --abbrev=0 --tags --exclude "$VERSION" 2>/dev/null)

  if [[ "$parentVersion" == "" ]]; then
    diff=""
  else
    diff="$parentVersion...HEAD"
  fi

  export COMMITS=$(git log --pretty=format:'- %h %s%n' $diff | sed -e '/^$/d;')
  cat <<-EOF | jq -crM '. * {body: env.COMMITS}' >dist/github-prerelease
{
  "tag_name": "${VERSION}",
  "name": "Pre-Release ${VERSION}",
  "draft": false,
  "prerelease": true
}
EOF

  # create the prerelease
  set -o errexit
  curl -XPOST "$gh_base/releases" \
    --fail \
    --silent \
    --show-error \
    -H "Authorization: Bearer ${GITHUB_TOKEN}" \
    -H 'Content-type: application/json' \
    -d @dist/github-prerelease >dist/github-release
    rm dist/github-prerelease
  set +o errexit
fi

release_id=$(jq '.id' dist/github-release)

for platform in macos linux; do
  set -o errexit
  curl --silent \
    --show-error \
    --fail \
    -XPOST \
    -H 'Content-type: application/gzip' \
    -H "Authorization: Bearer $GITHUB_TOKEN" \
    --data-binary @"dist/gcy-$platform-amd64.tgz" \
    "${gh_base//api/uploads}/releases/${release_id}/assets?name=gcy-$platform-amd64.tgz&label=gcy-$platform-amd64" >/dev/null

  curl --silent \
    --show-error \
    --fail \
    -XPOST \
    -H 'Content-type: plain/text' \
    -H "Authorization: Bearer $GITHUB_TOKEN" \
    --data-binary @"dist/gcy-$platform-amd64.shasum" \
    "${gh_base//api/uploads}/releases/${release_id}/assets?name=gcy-$platform-amd64.shasum&label=shasum-gcy-$platform-amd64" >/dev/null
  set +o errexit
done

set -o errexit
curl --silent \
  --show-error \
  --fail \
  -XPOST \
  -H 'Content-type: application/vnd.debian.binary-package' \
  -H "Authorization: Bearer $GITHUB_TOKEN" \
  --data-binary @"dist/gcy-amd64.deb" \
  "${gh_base//api/uploads}/releases/${release_id}/assets?name=gcy-$platform-amd64.deb&label=gcy-$platform-amd64-deb" >/dev/null
